name: Deploy to ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-1

jobs:
  is-file-changed:
    runs-on: ubuntu-latest
    outputs:
      lambda-notification: ${{steps.filter.outputs.lambda}}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Filter Dockerfile
        uses: dorny/paths-filter@v2
        id: filter
        with:
          base: 'main'
          filters: |
            lambda:
              - 'Dockerfile'

      - name: Set Outputs
        run: |
          echo "lambda-notification=${{steps.filter.outputs.lambda}}" >> $GITHUB_OUTPUT

  lambda-deployments:
    needs: [ is-file-changed ]
    if: needs.is-file-changed.outputs.lambda-notification == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Lambda Deployment
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          LAMBDA_NOTIFICATION_NAME: lambda-notification
          LAMBDA_DELETION_CONCEPT_NAME: lambda-deletion-concept
          VERSION: latest
        run: |
          docker buildx build -t $ECR_REGISTRY/$LAMBDA_NOTIFICATION_NAME:$VERSION .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION