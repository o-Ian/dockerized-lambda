name: Deploy to ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-1
  VERSION: latest

jobs:
  is-file-changed:
    runs-on: ubuntu-latest
    outputs:
      lambda-notification-dockerfile: ${{steps.filter.outputs.lambda-notification-dockerfile}}
      lambda-notification-handler: ${{steps.filter.outputs.lambda-notification-handler}}

      lambda-deletion-dockerfile: ${{steps.filter.outputs.lambda-deletion-dockerfile}}
      lambda-deletion-handler: ${{steps.filter.outputs.lambda-deletion-handler}}

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Filter Dockerfile
        uses: dorny/paths-filter@v2
        id: filter
        with:
          base: 'main'
          filters: |
            lambda-notification-dockerfile:
              - 'Dockerfile'
            lambda-notification-handler:
              - 'src/main/java/lambda/project/HelloLambda.java'

      - name: Set Outputs
        run: |
          echo "lambda-notification-dockerfile=${{steps.filter.outputs.lambda-notification-dockerfile}}" >> $GITHUB_OUTPUT
          echo "lambda-notification-handler=${{steps.filter.outputs.lambda-notification-handler}}" >> $GITHUB_OUTPUT   

  lambda-deployments:
    needs: [ is-file-changed ]
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Lambda Notification Deployment
        if: needs.is-file-changed.outputs.lambda-notification-dockerfile == 'false'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker buildx build -t $ECR_REGISTRY/lambda-notification:$VERSION .
          docker push $ECR_REGISTRY/lambda-notification:$VERSION
          aws lambda update-function-code \
           --function-name lambda-notification \
           --image-uri $ECR_REGISTRY/lambda-notification:$VERSION