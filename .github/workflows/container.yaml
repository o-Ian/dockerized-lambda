name: Deploying container

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-1
  ECR_IMAGE_LAMBDA_1: vwsermi-lambda-1
  ECS_SERVICE_LAMBDA_1: vwsermi-lambda-1
  ECS_TASK_DEFINITION_LAMBDA_1: .aws/task-def/lambda-1.json
  CONTAINER_NAME_LAMBDA_1: vwsermi-lambda-1
  ECS_CLUSTER: vwsermi-cluster

jobs:
  update-lambda-1-definition:
  # needs: [ release-semantic-version ]
  # if: ${{ needs.release-semantic-version.outputs.version != '' }}
  # if: false
    name: "Update Lambda 1 Task Definition"
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Render Amazon ECS task definition
        id: render-lambda-1-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION_LAMBDA_1 }}
          container-name: ${{ env.CONTAINER_NAME_LAMBDA_1 }}
          image: ${{ needs.release-semantic-version.outputs.resource_registry }}/${{ env.ECR_IMAGE_LAMBDA_1 }}:${{ needs.release-semantic-version.outputs.version }}
      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-lambda-1-container.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE_WS }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
